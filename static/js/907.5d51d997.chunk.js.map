{"version":3,"file":"static/js/907.5d51d997.chunk.js","mappings":"+QAGaA,EAAYC,EAAAA,GAAAA,EAAH,yaAoBTC,EAAUD,EAAAA,GAAAA,IAAH,uGAOPE,EAAWF,EAAAA,GAAAA,GAAH,gQAcRG,EAAWH,EAAAA,GAAAA,GAAH,6T,2HCWrB,UAlCmB,WACjB,IAAMI,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IAc5B,OAZAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACV,GAAE,CAACV,KAEJS,EAAAA,EAAAA,YAAU,WACJP,EACFF,GAASW,EAAAA,EAAAA,IAAwBT,IAC5B,OAAIE,QAAJ,IAAIA,GAAAA,EAAYQ,QACrBZ,GAASW,EAAAA,EAAAA,IAAwBP,EAAW,IAE/C,GAAE,CAACJ,EAAUE,EAAcE,KAG1B,+BACE,SAAC,KAAD,UACGG,EAAQM,MAAM,EAAG,GAAGC,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAAf,OACvB,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAArB,WACE,SAAC,KAAD,CAASI,IAAKF,GAAoBG,EAASC,IAAKL,KAChD,SAAC,KAAD,UAAYA,QAHDD,EADQ,OAWhC,C,uGCrDM,IAAMO,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,aAAaC,cAAvB,EAEzBnB,EAAsB,SAAAiB,GAAK,OAAIA,EAAMC,aAAaE,YAAvB,EAG3BlB,EAAgB,SAAAe,GAAK,OAAIA,EAAMC,aAAaG,iBAAvB,C","sources":["components/CardMeal/CardMeal.styled.jsx","components/CategoriesList/RecipeList/RecipeList.jsx","redux/mainRecipes/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const CardTitle = styled.p`\n  position: absolute;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: -0.24px;\n  color: rgb(34, 37, 42);\n  padding: 16px;\n  background-color: rgb(255, 255, 255);\n  position: absolute;\n  top: 245px;\n  left: 18px;\n  border-radius: 8px;\n  width: calc(100% - 36px);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const CardImg = styled.img`\n  height: 323px;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const CardDish = styled.li`\n  width: 343px;\n  height: 323px;\n  border-radius: 8px;\n  position: relative;\n\n  @media (min-width: 768px) {\n    width: calc((100% - 32px) / 2);\n  }\n\n  @media (min-width: 1440px) {\n    width: calc((100% - 42px) / 4);\n  }\n`;\nexport const RowTable = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: 100px;\n  margin-top: 32px;\n  gap: 28px;\n\n  @media (min-width: 768px) {\n    gap: 32px;\n    margin-bottom: 200px;\n    margin-top: 50px;\n  }\n\n  @media (min-width: 1440px) {\n    gap: 14px;\n    row-gap: 100px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  getCategoryList,\n  getAllRecipesByCategory,\n} from '../../../redux/mainRecipes/operations';\nimport {\n  getFullCategoryList,\n  getAllRecipes,\n} from '../../../redux/mainRecipes/selectors';\n\nimport {\n  CardImg,\n  CardTitle,\n  CardDish,\n  RowTable,\n} from '../../CardMeal/CardMeal.styled';\nimport NoImage from '../../../images/default.jpg';\n\nconst RecipeList = () => {\n  const dispatch = useDispatch();\n  const { categoryName } = useParams();\n  const categories = useSelector(getFullCategoryList);\n  const recipes = useSelector(getAllRecipes);\n\n  useEffect(() => {\n    dispatch(getCategoryList());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (categoryName) {\n      dispatch(getAllRecipesByCategory(categoryName));\n    } else if (categories?.length) {\n      dispatch(getAllRecipesByCategory(categories[0]));\n    }\n  }, [dispatch, categoryName, categories]);\n\n  return (\n    <>\n      <RowTable>\n        {recipes.slice(0, 8).map(({ _id, title, preview }) => (\n          <CardDish key={_id}>\n            <Link to={`/recipe/${_id}`}>\n              <CardImg src={preview ? preview : NoImage} alt={title} />\n              <CardTitle>{title}</CardTitle>\n            </Link>\n          </CardDish>\n        ))}\n      </RowTable>\n    </>\n  );\n};\n\nexport default RecipeList;\n","export const getContentForMain = state => state.outerRecipes.mainCategories;\nexport const getIsError = state => state.outerRecipes.isError;\nexport const getFullCategoryList = state => state.outerRecipes.categoryList;\nexport const getLimitedRecipes = state =>\n  state.outerRecipes.limitedRecipesByCategory;\nexport const getAllRecipes = state => state.outerRecipes.recipesOfCategory;\nexport const getSingleRecipe = state => state.outerRecipes.singleRecipe;\nexport const getPopular = state => state.outerRecipes.popularRecipes;\nexport const getRecipesBySearchQuery = state =>\n  state.outerRecipes.recipesByQuery;\nexport const getIsCategoryFetching = state =>\n  state.outerRecipes.isCategoryFetching;\n\nexport const isLoadingRecipesOfCategory = state =>\n  state.recipes.loadingRecipesOfCategory;\n"],"names":["CardTitle","styled","CardImg","CardDish","RowTable","dispatch","useDispatch","categoryName","useParams","categories","useSelector","getFullCategoryList","recipes","getAllRecipes","useEffect","getCategoryList","getAllRecipesByCategory","length","slice","map","_id","title","preview","to","src","NoImage","alt","getContentForMain","state","outerRecipes","mainCategories","categoryList","recipesOfCategory"],"sourceRoot":""}