{"version":3,"file":"static/js/657.c3ee3510.chunk.js","mappings":"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","sources":["components/CardMeal/CardMeal.styled.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","pages/MainPage/MainPage.styled.jsx","components/ChooseYourBreakfast/ChooseYourBreakfast.styles.jsx","components/ChooseYourBreakfast/ChooseYourBreakfast.jsx","components/ButtonSkew/buttonSkew.styled.jsx","components/ButtonOthCtg/ButtonOthCtg.styled.jsx","components/ButtonSkew/ButtonSkew.jsx","components/PreviewCategories/PreviewCategories.styled.jsx","components/PreviewCategories/PreviewCategories.jsx","components/SearchFormMain/SearchFormMain.styled.jsx","services/toasts.js","components/SearchFormMain/SearchFormMain.jsx","pages/MainPage/MainPage.jsx","redux/mainRecipes/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const CardTitle = styled.p`\n  position: absolute;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: -0.24px;\n  color: rgb(34, 37, 42);\n  padding: 16px;\n  background-color: rgb(255, 255, 255);\n  position: absolute;\n  top: 245px;\n  left: 18px;\n  border-radius: 8px;\n  width: calc(100% - 36px);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const CardImg = styled.img`\n  height: 323px;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const CardDish = styled.li`\n  width: 343px;\n  height: 323px;\n  border-radius: 8px;\n  position: relative;\n\n  @media (min-width: 768px) {\n    width: calc((100% - 32px) / 2);\n  }\n\n  @media (min-width: 1440px) {\n    width: calc((100% - 42px) / 4);\n  }\n`;\nexport const RowTable = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: 100px;\n  margin-top: 32px;\n  gap: 28px;\n\n  @media (min-width: 768px) {\n    gap: 32px;\n    margin-bottom: 200px;\n    margin-top: 50px;\n  }\n\n  @media (min-width: 1440px) {\n    gap: 14px;\n    row-gap: 100px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MainConteiner = styled.div`\n  padding: 0 16px;\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 100px;\n  }\n`;\n","import { MainConteiner } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <MainConteiner>{children}</MainConteiner>;\n};\n","import styled from 'styled-components';\nimport bgrImageMob from '../../images/mainpage1x_mob.png';\nimport bgrImageTab from '../../images/mainpage1x_tab.png';\nimport bgrImageDesk from '../../images/mainpage1x_desk.png';\nimport bgrImageMob2 from '../../images/mainpage2x_mob.png';\nimport bgrImageTab2 from '../../images/mainpage2x_tab.png';\nimport bgrImageDesk2 from '../../images/mainpage2x_desk.png';\n\nexport const MainPageH1 = styled.h1`\n  margin: 132px 12px 0px 12px;\n  color: '#22252A';\n  \n  font-style: normal;\n  font-weight: 400;\n  font-size: 60px;\n  line-height: 60px;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  letter-spacing: -0.005em;\n\n  @media (min-width: 768px) {\n    margin: 204px 12px 0px 12px;\n    font-size: 72px;\n    line-height: 72px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 100px;\n    line-height: 100px;\n  }\n`;\n\nexport const ColorWrap = styled.div`\n  background-color: #fafafa;\n`;\n\nexport const SpanGr = styled.span`\n  color: #8baa36;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 60px;\n  line-height: 60px;\n  text-align: center;\n  letter-spacing: -0.005em;\n  @media (min-width: 768px) {\n    font-size: 72px;\n    line-height: 72px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: 100px;\n    line-height: 100px;\n  }\n`;\n\nexport const MainPageText = styled.p`\n  margin: 14px 40px 157px 40px;\n  color: '#23262A';\n  \n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 18px;\n  text-align: center;\n  letter-spacing: '-0.02em';\n\n  @media (min-width: 768px) {\n    margin: 24px 40px 32px 40px;\n    font-size: 14px;\n    line-height: 18px;\n  }\n\n  @media (min-width: 1440px) {\n    margin: 14px 55px 50px 24px;\n    font-size: 18px;\n    line-height: 24px;\n    text-align: left;\n  }\n`;\n\nexport const MainPageBg = styled.div`\n  background-image: url(${bgrImageMob});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-color: #fafafa;\n  display: flex;\n  height: 777px;\n  margin-bottom: 60px;\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    (-webkit-min-device-pixel-ratio: 2),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${bgrImageMob2});\n  }\n  @media (min-width: 768px) {\n    background-image: url(${bgrImageTab});\n    height: 640px;\n    margin-bottom: 72px;\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgrImageTab2});\n    }\n  }\n\n  @media (min-width: 1440px) {\n    background-image: url(${bgrImageDesk});\n    height: 800px;\n    margin-bottom: 100px;\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgrImageDesk2});\n    }\n  }\n`;\nexport const MainPageDiv = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    margin-right: 368px;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 830px;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ChooseBlock = styled.div`\n  width: 225px;\n  height: 92px;\n  background-color: #ffffff;\n  border-radius: 8px;\n  padding: 8px;\n  margin-left: 88px;\n  margin-bottom: 115px;\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n    padding: 12px;\n    line-height: 20px;\n    letter-spacing: -0.24px;\n    width: 261px;\n    height: 100px;\n    position: absolute;\n    right: 32px;\n    top: 380px;\n  }\n\n  @media (min-width: 1440px) {\n    line-height: 20px;\n    padding: 16px;\n    width: 298px;\n    height: 114px;\n    position: absolute;\n    right: 129px;\n    top: 460px;\n  }\n`;\n\nexport const ChooseText = styled.p`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: '-0.24px';\n  color: '#3E4462';\n  @media (min-width: 768px) {\n    font-size: 14px;\n    line-height: 18px;\n  }\n\n  @media (min-width: 1440px) {\n    line-height: 20px;\n  }\n`;\n\nexport const ChooseSpan = styled.span`\n  color: #8baa36;\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: '-0.24px';\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media (min-width: 1440px) {\n    line-height: 20px;\n  }\n`;\nexport const ChooseLink = styled(NavLink)`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 12px;\n  letter-spacing: '-0.02em';\n  color: #3e4462;\n\n  margin-top: 4px;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    color: rgb(139, 170, 54);\n    svg path {\n      stroke: rgb(139, 170, 54);\n    }\n  }\n\n  @media (min-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media (min-width: 1440px) {\n    line-height: 20px;\n  }\n`;\n\nexport const RightArrow = styled.svg`\n  width: 18px;\n  height: 18px;\n  margin-left: 4px;\n  display: flex;\n  stroke: '#3E4462';\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import {\n  ChooseBlock,\n  ChooseLink,\n  ChooseSpan,\n  ChooseText,\n  RightArrow,\n} from './ChooseYourBreakfast.styles';\nimport {scrollToTop} from '../../services/TheMealAPI'\n\nexport const ChooseYourBreakfast = () => {\n  return (\n    <ChooseBlock>\n      <ChooseText>\n        <ChooseSpan>Delicious and healthy &nbsp;</ChooseSpan>\n        way to enjoy a variety of fresh ingredients in one satisfying meal\n      </ChooseText>\n      <ChooseLink to={'/categories/breakfast'} onClick={scrollToTop}>\n        See recipes\n        <RightArrow\n          width=\"18\"\n          height=\"18\"\n          viewBox=\"0 0 18 18\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M3 9H15M15 9L10.5 4.5M15 9L10.5 13.5\"\n            stroke=\"#3E4462\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </RightArrow>\n      </ChooseLink>\n    </ChooseBlock>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ButtonSkewStyle = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  white-space: nowrap;\n  box-sizing: border-box;\n  \n  font-weight: '400';\n  line-height: '-0.24px';\n  font-size: 14px;\n\n  color: ${p =>\n    p.styled === 'black'\n      ? '#FAFAFA'\n      : p.styled === 'olive'\n      ? '#FAFAFA'\n      : p.styled === 'other'\n      ? '#22252A'\n      : p.styled === 'transparent'\n      ? '#23262A'\n      : 'red'};\n\n  padding: ${p =>\n    p.location === 'favorite' || p.location === 'recipes'\n      ? '6px 14px'\n      : '16px 30px'};\n\n  background-color: ${({ styled }) => {\n    switch (styled) {\n      case 'black':\n        return '#22252A';\n      case 'olive':\n        return '#8BAA36';\n      case 'transparent':\n        return 'transparent';\n      case 'other':\n        return 'transparent';\n      default:\n        return 'red';\n    }\n  }};\n  outline: none;\n  /* border: none; */\n\n  border-top-left-radius: 30px;\n  border-top-right-radius: 80px;\n  border-bottom-left-radius: 80px;\n  border-bottom-right-radius: 30px;\n\n  text-align: center;\n\n  border: ${({ styled }) => {\n    switch (styled) {\n      case 'other':\n        return `1px solid '#8BAA36'`;\n      case 'transparent':\n        return `1px solid '#FAFAFA'`;\n      default:\n        return '1px solid transparent';\n    }\n  }};\n\n  cursor: pointer;\n  transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n\n  &:hover {\n    color: ${({ styled}) => {\n      switch (styled) {\n        case 'black':\n          return '#FAFAFA';\n        case 'olive':\n          return '#FAFAFA';\n        case 'other':\n          return '#FAFAFA';\n        case 'transparent':\n          return '#8BAA36';\n        default:\n          return 'red';\n      }\n    }};\n    background-color: ${({ styled }) => {\n      switch (styled) {\n        case 'black':\n          return '#8BAA36';\n        case 'olive':\n          return '#22252A';\n        case 'transparent':\n          return 'transparent';\n        case 'other':\n          return '#8BAA36';\n        default:\n          return 'red';\n      }\n    }};\n    border: ${({ styled, theme }) => {\n      return styled === 'transparent'\n        ? `1px solid '#8BAA36'`\n        : '1px solid transparent';\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: ${p =>\n      p.location === 'favorite' || p.location === 'recipes'\n        ? '12px 32px'\n        : '16px 32px'};\n    min-width: 130px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    font-size: 16px;\n    line-height: '1.12';\n    padding: ${p =>\n      p.location === 'favorite' || p.location === 'recipes'\n        ? '18px 44px'\n        : '20px 40px'};\n    min-width: 160px;\n  }\n`;\n","import { ButtonSkewStyle } from 'components/ButtonSkew/buttonSkew.styled';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nexport const BtnOthCtg = styled(NavLink)`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  text-align: center;\n  border-radius: 30px 80px;\n  color: '#22252A';\n  padding: 14px 32px;\n  border: 'border: 1px solid rgb(139, 170, 54)';\n  transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)';\n  &:hover {\n    color: '#FAFAFA';\n    background-color: '#8BAA36';\n  }\n  @media (min-width: 768px) {\n    padding: 20px 52px;\n    font-size: 16px;\n    line-height: 24px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 20px 52px;\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n\nexport const ButtonOthCtgWrap = styled.div`\n  margin: 40px 0px 100px;\n  display: flex;\n  justify-content: center;\n\n  ${ButtonSkewStyle} {\n    border: 1px solid rgb(139, 170, 54);\n    color: '#22252A';\n    &:hover {\n      color: '#FAFAFA';\n    }\n  }\n\n  @media (min-width: 768px) {\n    margin: 40px 0px 100px;\n  }\n\n  @media (min-width: 1440px) {\n    margin: 14px 0px 118px;\n  }\n`;\n","import { ButtonSkewStyle } from './buttonSkew.styled';\n\nexport const ButtonSkew = ({ type, fn, styled, text, location }) => {\n  const onClick = e => {\n    if (!fn) return;\n    fn(e);\n  };\n  return (\n    <ButtonSkewStyle\n      type={type}\n      onClick={onClick}\n      styled={styled}\n      location={location}\n    >\n      {text}\n    </ButtonSkewStyle>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nexport const TitlePrew = styled.p`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 28px;\n  letter-spacing: '-0.02em';\n  color: '#001833';\n  margin-bottom: 32px;\n  text-transform: capitalize;\n  @media (min-width: 768px) {\n    font-size: 44px;\n    line-height: 44px;\n  }\n  @media (min-width: 1440px) {\n    font-size: 44px;\n    line-height: 44px;\n  }\n`;\n\nexport const BtnCategories = styled(NavLink)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 24px;\n  gap: 8px;\n  color: rgb(250, 250, 250);\n  background: #8aa936;\n  border-radius: 6px;\n  cursor: pointer;\n  float: right;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  &:hover {\n    background-color: rgb(35, 38, 42);\n    border: 1px solid transparent;\n    color: rgb(255, 255, 255);\n  }\n`;\n\n\n\nexport const CardWrapper = styled.ul`\n \n  margin-bottom: 50px;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  gap: 0;\n  @media (min-width: 768px) {\n    gap: 32px;\n  }\n  @media (min-width: 1440px) {\n    gap: 14px;\n  }\n`;\nexport const CategoryList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 100px;\n`;\n\nexport const CategoryItem = styled.li``;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'react-tooltip/dist/react-tooltip.css';\nimport { useMediaQuery } from 'react-responsive';\n\nimport {\n  BtnCategories,\n  CardWrapper,\n  CategoryItem,\n  CategoryList,\n  TitlePrew,\n} from './PreviewCategories.styled';\n\nimport { getMainCategories } from '../../redux/mainRecipes/operations';\n\nimport { getContentForMain } from '../../redux/mainRecipes/selectors';\nimport { Link } from 'react-router-dom';\n\nimport {\n  CardImg,\n  CardTitle,\n  CardDish,\n} from '../../components/CardMeal/CardMeal.styled';\nimport NoImage from '../../images/default.jpg';\n\nexport const PreviewCategories = () => {\n  const categories = useSelector(getContentForMain);\n  \n  const dispatch = useDispatch();\n  const isDesktop = useMediaQuery({ minWidth: 1440 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1439 });\n\n  useEffect(() => {\n    dispatch(getMainCategories());\n  }, [dispatch]);\n\n  let numCard;\n  if (isDesktop) {\n    numCard = 4; // Десктоп\n  } else if (isTablet) {\n    numCard = 2; // Планшет\n  } else {\n    numCard = 1; // Мобильный\n  }\n\n  return (\n    <CategoryList>\n      {categories.length !== 0 &&\n        categories.map(({ _id, meals }) => (\n          <CategoryItem key={_id}>\n            <TitlePrew>{_id}</TitlePrew>\n            <CardWrapper>\n              {meals.slice(0, numCard).map(({ _id, title, preview }) => (\n                <CardDish key={_id}>\n                  <Link to={`/recipe/${_id}`}>\n                    <CardImg src={preview ? preview : NoImage} alt={title} />\n                    <CardTitle>{title}</CardTitle>\n                  </Link>\n                </CardDish>\n              ))}\n            </CardWrapper>\n            <BtnCategories to={`/categories/${_id}`}>See all</BtnCategories>\n          </CategoryItem>\n        ))}\n    </CategoryList>\n  );\n};\n","import { ButtonSkewStyle } from 'components/ButtonSkew/buttonSkew.styled';\nimport styled from 'styled-components';\n\nexport const SearchBlock = styled.div`\n  width: 295px;\n  height: 52px;\n  background-color: '1px solid #F0F0F0';\n\n  border-top-left-radius: 30px;\n  border-top-right-radius: 80px;\n  border-bottom-left-radius: 80px;\n  border-bottom-right-radius: 30px;\n  margin: 0 16px 83px;\n  border: '1px solid #F0F0F0';\n  color: '#BDBDBD';\n  \n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  position: relative;\n\n  @media (min-width: 768px) {\n    width: 369px;\n    height: 59px;\n    font-size: 16px;\n    line-height: 24px;\n    margin: 0 16px 195px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 510px;\n    height: 71px;\n    font-size: 16px;\n    line-height: 24px;\n  }\n\n  ${ButtonSkewStyle} {\n    width: 113px;\n    height: 52px;\n    position: absolute;\n    top: -0.5px;\n    right: -0.5px;\n  }\n\n  @media (min-width: 768px) {\n    ${ButtonSkewStyle} {\n      width: 161px;\n      height: 59px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    ${ButtonSkewStyle} {\n      width: 161px;\n      height: 70px;\n    }\n  }\n`;\n\n\nexport const SearchIn = styled.form`\n  display: flex;\n  justify-content: flex-end;\n  border-radius: 30px, 80px;\n  height: 100%;\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  border-top-left-radius: 30px;\n  border-bottom-left-radius: 80px;\n  border-top-right-radius: 80px;\n  border-bottom-right-radius: 30px;\n  border: 1px solid #f0f0f0;\n  background-color: #fafafa;\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  padding-left: 32px;\n  color: '#BDBDBD';\n  @media (min-width: 768px) {\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 24px;\n  }\n\n  &:hover {\n    border: none;\n    outline: none;\n  }\n  &:active {\n    border: none;\n    outline: none;\n  }\n  &:focus {\n    border: none;\n    outline: none;\n  }\n\n  &::placeholder {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 24px;\n    color: '#BDBDBD';\n  }\n`;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst toastSettings = {\n  theme: 'light',\n  position: 'top-left',\n};\n\n\nexport const toastWarnEmptyField = () => {\n  return toast.warn(\n    `Wow, it looks like you didn't enter anything!!!`,\n    toastSettings\n  );\n};","import { ButtonSkew } from 'components/ButtonSkew/ButtonSkew';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { SearchBlock, SearchIn, SearchInput } from './SearchFormMain.styled';\nimport { setSearch } from '../../redux/search/searchSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { toastWarnEmptyField } from '../../services/toasts';\n\n\n\nexport const SearchForm = ({ styled}) => {\n  const dispatch = useDispatch();\n  const [newQuery, setNewQuery] = useState('');\n  const navigate = useNavigate();\n\n\n  const validateSearchQuery = value => {\n    let error;\n    if (!/^[a-zA-Z]+$/.test(value)) {\n      error = 'Please enter only letters';\n    }\n    return error;\n  };\n\n  const handleSearchChange = event => {\n    const newQuery = event.currentTarget.value;\n    setNewQuery(newQuery);\n  };\n\n  useEffect(() => {\n    dispatch(setSearch(newQuery));\n    window.localStorage.setItem('search', newQuery);\n  }, [dispatch, newQuery]);\n\n   const handleSubmit = e => {\n     e.preventDefault();\n     if (newQuery) {\n       const type = 'title';\n       navigate(`/search?query=${newQuery}&type=${type}`);\n     } else {\n       toastWarnEmptyField(newQuery);\n     }\n  };\n  \n\n  return (\n    <SearchBlock>\n      <SearchIn onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          name=\"queryInput\"\n          onChange={handleSearchChange}\n          validate={validateSearchQuery}\n          autoFocus\n        />\n        <ButtonSkew type=\"submit\" text=\"Search\" styled={styled}></ButtonSkew>\n      </SearchIn>\n    </SearchBlock>\n  );\n};","import React from 'react';\n\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Container } from 'components/Container/Container';\nimport {\n  MainPageBg,\n  MainPageDiv,\n  MainPageH1,\n  MainPageText,\n  SpanGr,\n  ColorWrap,\n} from './MainPage.styled';\nimport { ChooseYourBreakfast } from '../../components/ChooseYourBreakfast/ChooseYourBreakfast';\nimport { ButtonOthCtgWrap } from 'components/ButtonOthCtg/ButtonOthCtg.styled';\nimport { ButtonSkew } from 'components/ButtonSkew/ButtonSkew';\n\nimport { PreviewCategories } from '../../components/PreviewCategories/PreviewCategories';\n\nimport { SearchForm } from '../../components/SearchFormMain/SearchFormMain';\n\nconst MainPage = () => {\n  const navigate = useNavigate();\n\n  const onClick = e => {\n    navigate('/categories');\n  };\n\n  return (\n    <>\n      <ColorWrap>\n        <MainPageBg>\n          <Container>\n            <MainPageDiv>\n              <MainPageH1>\n                <SpanGr>So</SpanGr>Yummy\n              </MainPageH1>\n              <MainPageText>\n                \"What to cook?\" is not only a recipe app, it is, in fact, your\n                cookbook. You can add your own recipes to save them for the\n                future.\n              </MainPageText>\n              <ChooseYourBreakfast />\n              <SearchForm styled={'black'} />\n            </MainPageDiv>\n          </Container>\n        </MainPageBg>\n        <Container>\n          <PreviewCategories />\n          <ButtonOthCtgWrap>\n            <Link\n              to=\"/categories/beef\"\n              onClick={() => {\n                window.scrollTo(0, 0);\n              }}\n            >\n              <ButtonSkew\n                type={'button'}\n                fn={onClick}\n                styled={'other'}\n                text={'Other categories'}\n              />\n            </Link>\n          </ButtonOthCtgWrap>\n        </Container>\n      </ColorWrap>\n    </>\n  );\n};\n\nexport default MainPage;\n","export const getContentForMain = state => state.outerRecipes.mainCategories;\nexport const getIsError = state => state.outerRecipes.isError;\nexport const getFullCategoryList = state => state.outerRecipes.categoryList;\nexport const getLimitedRecipes = state =>\n  state.outerRecipes.limitedRecipesByCategory;\nexport const getAllRecipes = state => state.outerRecipes.recipesOfCategory;\nexport const getSingleRecipe = state => state.outerRecipes.singleRecipe;\nexport const getPopular = state => state.outerRecipes.popularRecipes;\nexport const getRecipesBySearchQuery = state =>\n  state.outerRecipes.recipesByQuery;\nexport const getIsCategoryFetching = state =>\n  state.outerRecipes.isCategoryFetching;\n\nexport const isLoadingRecipesOfCategory = state =>\n  state.recipes.loadingRecipesOfCategory;\n"],"names":["CardTitle","styled","CardImg","CardDish","RowTable","MainConteiner","Container","children","MainPageH1","ColorWrap","SpanGr","MainPageText","MainPageBg","bgrImageMob","bgrImageMob2","bgrImageTab","bgrImageTab2","bgrImageDesk","bgrImageDesk2","MainPageDiv","ChooseBlock","ChooseText","ChooseSpan","ChooseLink","NavLink","RightArrow","ChooseYourBreakfast","to","onClick","scrollToTop","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ButtonSkewStyle","p","location","theme","ButtonOthCtgWrap","ButtonSkew","type","fn","text","e","TitlePrew","BtnCategories","CardWrapper","CategoryList","CategoryItem","PreviewCategories","numCard","categories","useSelector","getContentForMain","dispatch","useDispatch","isDesktop","useMediaQuery","minWidth","isTablet","maxWidth","useEffect","getMainCategories","length","map","_id","meals","slice","title","preview","src","NoImage","alt","SearchBlock","SearchIn","SearchInput","toastSettings","position","SearchForm","useState","newQuery","setNewQuery","navigate","useNavigate","setSearch","window","localStorage","setItem","onSubmit","preventDefault","toast","name","onChange","event","currentTarget","value","validate","error","test","autoFocus","scrollTo","state","outerRecipes","mainCategories","getFullCategoryList","categoryList","getAllRecipes","recipesOfCategory"],"sourceRoot":""}